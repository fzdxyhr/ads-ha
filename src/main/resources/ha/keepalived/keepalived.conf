! Configuration File for keepalived


global_defs {
   router_id ads-ha   #指定标识该机器的route_id
}

vrrp_script chk_health {
   script "/opt/ads-ha/WEB-INF/classes/ha/keepalived/check.sh"  ###监控脚本
   interval 10    ###监控时间,每10秒检测一次
   fall 3  #执行失败3次才认为失败
}

vrrp_instance vi_ads_ha {
    state BACKUP  ##两台配置此处均是BACKUP  
    nopreempt	  ##不抢占，只在优先级高的机器上设置即可，优先级低的机器不设置 
    virtual_router_id 88  ##VRRP组名，两个节点的设置必须一样，以致命各个节点属于同一组VRRP组
    priority 200   ###权重值  
    advert_int 1  ##组播信息发送间隔，两个节点必须设置一样
	  garp_master_delay 1   ##在切换到master状态后，延迟进行gratuitous ARP请求
	  interface interface_name  ##网卡
    authentication { ##设置验证信息，两个节点必须一致
        auth_type PASS
        auth_pass 1111
    }
    virtual_ipaddress {  ###指定虚拟IP，两个节点设置必须一样
        vrrpIp
    }
    track_interface {   ##网络接口卡监控起来，当其中的一块出现故障是keepalived都将视为路由器出现故障。
      interface_name
    }
    track_script {  ##添加一个周期性执行的脚本。脚本的退出状态码会被调用它的所有的VRRP Instance记录。
      chk_health    ###执行上面定义的chk_health
    }
	  notify_master "/opt/ads-ha/WEB-INF/classes/ha/keepalived/state.sh master"  ##当前节点成为master时，通知脚本执行任务
    notify_backup "/opt/ads-ha/WEB-INF/classes/ha/keepalived/state.sh backup"  ##当前节点成为backup时，通知脚本执行任务
    notify_fault "/opt/ads-ha/WEB-INF/classes/ha/keepalived/state.sh fault"    ##当前节点出现故障，通知脚本执行任务;
    notify_stop "/opt/ads-ha/WEB-INF/classes/ha/keepalived/state.sh stop"      ##当前节点停止，通知脚本执行任务;
}
